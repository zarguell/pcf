{
  "openapi": "3.0.0",
  "info": {
    "title": "Pentest Collaboration Framework API",
    "description": "API of Pentest Collaboration Framework",
    "contact": {
      "email": "iljashaposhnikov@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/api/v1/"
    }
  ],
  "security": [
    {
      "basicAuth": []
    }
  ],
  "tags": [
    {
      "name": "teams",
      "description": "Team endpoints"
    },
    {
      "name": "projects",
      "description": "Project endpoints"
    },
    {
      "name": "tokens",
      "description": "Token endpoints"
    },
    {
      "name": "users",
      "description": "Users endpoints"
    },
    {
      "name": "hosts",
      "description": "Project hosts endpoints"
    },
    {
      "name": "networks",
      "description": "Project networks"
    },
    {
      "name": "issues",
      "description": "Project issues"
    },
    {
      "name": "issue rules",
      "description": "Issue rules actions"
    },
    {
      "name": "tasks",
      "description": "Project tasks endpoints"
    },
    {
      "name": "tools",
      "description": "Project tools import integration"
    }
  ],
  "paths": {
    "/create_token": {
      "post": {
        "tags": [
          "tokens"
        ],
        "summary": "access_token creation",
        "description": "Authorization interface for receiving user API access_token \n",
        "requestBody": {
          "description": "User to authorize",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_token_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A User object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/check_token": {
      "post": {
        "tags": [
          "tokens"
        ],
        "summary": "access_token checking",
        "description": "Check API access token\n",
        "requestBody": {
          "description": "Token check form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/check_token_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A User object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/disable_token": {
      "post": {
        "tags": [
          "tokens"
        ],
        "summary": "Disable API token",
        "description": "Disable API token\n",
        "requestBody": {
          "description": "Token disable form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disable_token_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/me": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "my account info",
        "description": "Get information about your account\n",
        "requestBody": {
          "description": "access_token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_me_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A User object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_uuid}/info": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "my account info",
        "description": "Get information about user account\n",
        "parameters": [
          {
            "name": "user_uuid",
            "in": "path",
            "description": "Registered user UUID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "access_token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_uuid_info_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A User object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/teams": {
      "post": {
        "tags": [
          "teams"
        ],
        "summary": "Get teams list",
        "description": "Get information about user teams\n",
        "requestBody": {
          "description": "access_token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/teams_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of teams",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_5"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/team/{team_id}/info": {
      "post": {
        "tags": [
          "teams"
        ],
        "summary": "Get your team info",
        "description": "Get information about your team\n",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "access_token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/team_id_info_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of teams",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_6"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/team/{team_id}/users": {
      "post": {
        "tags": [
          "teams"
        ],
        "summary": "Get your team members list",
        "description": "Get members list of your team\n",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "access_token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/team_id_users_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of team members",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_7"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/team/{team_id}/projects": {
      "post": {
        "tags": [
          "teams"
        ],
        "summary": "Get your team projects list",
        "description": "Get projects list of your team\n",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "access_token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/team_id_projects_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of team projects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/team/{team_id}/logs": {
      "post": {
        "tags": [
          "teams"
        ],
        "summary": "Get your team logs",
        "description": "Get logs of your team\n",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "logs params form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/team_id_logs_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of project logs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_9"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/team/{team_id}/info/update": {
      "post": {
        "tags": [
          "teams"
        ],
        "summary": "Update team info",
        "description": "Update team info (only for team admins!)\n",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Update team info form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/info_update_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_10"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/team/{team_id}/users/add": {
      "post": {
        "tags": [
          "teams"
        ],
        "summary": "Add user to team",
        "description": "Add user to team\n",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Add user to team form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users_add_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_11"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/team/{team_id}/users/delete": {
      "post": {
        "tags": [
          "teams"
        ],
        "summary": "Delete user from team",
        "description": "Delete user from team\n",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Delete user from team form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users_delete_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_12"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/team/{team_id}/users/set_admin": {
      "post": {
        "tags": [
          "teams"
        ],
        "summary": "Give user admin privileges",
        "description": "Give user administration privileges\n",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Give user admin privileges form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users_set_admin_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_13"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/team/{team_id}/users/devote": {
      "post": {
        "tags": [
          "teams"
        ],
        "summary": "Devote team admin to tester",
        "description": "Devote team admin to tester\n",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Devote admin form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users_devote_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_13"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "List of users projects",
        "description": "Get list of users projects\n",
        "requestBody": {
          "description": "Token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/projects_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of projects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_14"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/settings": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Project settings",
        "description": "Get project settings\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project_id_settings_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of projects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_15"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/settings/edit": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Edit project settings",
        "description": "Edit project settings\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Project config form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/settings_edit_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_13"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/new": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create a new project",
        "description": "Create a new project\n",
        "requestBody": {
          "description": "Project config form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project_new_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_16"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/hosts": {
      "post": {
        "tags": [
          "hosts"
        ],
        "summary": "Project hosts",
        "description": "Get project hosts\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project_id_hosts_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of hosts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_17"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/host/{host_id}/info": {
      "post": {
        "tags": [
          "hosts"
        ],
        "summary": "Information about host",
        "description": "Get project host information\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "host_id",
            "in": "path",
            "description": "Host UUID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/host_id_info_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Host information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_18"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/host/{host_id}/edit": {
      "post": {
        "tags": [
          "hosts"
        ],
        "summary": "Edit host information",
        "description": "Edit project host information\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "host_id",
            "in": "path",
            "description": "Host UUID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Host description form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/host_id_edit_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_19"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/host/{host_id}/delete": {
      "post": {
        "tags": [
          "hosts"
        ],
        "summary": "Delete host",
        "description": "Delete host from project\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "host_id",
            "in": "path",
            "description": "Host UUID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/host_id_delete_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_19"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/host/new": {
      "post": {
        "tags": [
          "hosts"
        ],
        "summary": "Add new host",
        "description": "Add a new host to project\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Host creation form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/host_new_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_20"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/port/new": {
      "post": {
        "tags": [
          "hosts"
        ],
        "summary": "Add new port",
        "description": "Add a new port to project\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Port creation form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/port_new_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_21"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/port/{port_id}/info": {
      "post": {
        "tags": [
          "hosts"
        ],
        "summary": "Get port information",
        "description": "Get project port information\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "port_id",
            "in": "path",
            "description": "Port ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/port_id_info_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UUID of new port",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_22"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/port/{port_id}/edit": {
      "post": {
        "tags": [
          "hosts"
        ],
        "summary": "Edit port information",
        "description": "Edit project port information\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "port_id",
            "in": "path",
            "description": "Port ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Port information form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/port_id_edit_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_23"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/port/{port_id}/delete": {
      "post": {
        "tags": [
          "hosts"
        ],
        "summary": "Delete port",
        "description": "Delete project port\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "port_id",
            "in": "path",
            "description": "Port ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/port_id_delete_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_23"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/networks": {
      "post": {
        "tags": [
          "networks"
        ],
        "summary": "Networks list",
        "description": "Get project networks\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project_id_networks_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_24"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/network/{network_id}/info": {
      "post": {
        "tags": [
          "networks"
        ],
        "summary": "Network information",
        "description": "Get project network information\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "network_id",
            "in": "path",
            "description": "Network ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network_id_info_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_25"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/network/{network_id}/edit": {
      "post": {
        "tags": [
          "networks"
        ],
        "summary": "Network edit form",
        "description": "Edit project network information\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "network_id",
            "in": "path",
            "description": "Network ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Edit network information form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network_id_edit_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_23"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/network/{network_id}/delete": {
      "post": {
        "tags": [
          "networks"
        ],
        "summary": "Network delete form",
        "description": "Delete project network\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "network_id",
            "in": "path",
            "description": "Network ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Delete network form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network_id_delete_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_23"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/network/create": {
      "post": {
        "tags": [
          "networks"
        ],
        "summary": "Network create form",
        "description": "Create new project network\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Create new network form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network_create_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_26"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/issues/list": {
      "post": {
        "tags": [
          "issues"
        ],
        "summary": "Project issues list",
        "description": "Get list of project issues\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Get list of issues",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/issues_list_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Issues list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_27"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/issues/search": {
      "post": {
        "tags": [
          "issues"
        ],
        "summary": "Search project issues",
        "description": "Search project issues using SQL LIKE queries\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Search project issues using SQL LIKE queries",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/issues_search_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Issues list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_27"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/issues/{issue_id}/info": {
      "post": {
        "tags": [
          "issues"
        ],
        "summary": "Project issue info",
        "description": "Get project issue info\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "Issue ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Get issue information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/issue_id_info_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Issue info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_28"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/issues/create": {
      "post": {
        "tags": [
          "issues"
        ],
        "summary": "Create project issue",
        "description": "Create project issue\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Create a new issue",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/issues_create_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Issue UUID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_29"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/issues/{issue_id}/edit": {
      "post": {
        "tags": [
          "issues"
        ],
        "summary": "Edit project issue",
        "description": "Edit project issue\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "Issue ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Edit issue",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/issue_id_edit_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_23"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/issues/{issue_id}/delete": {
      "post": {
        "tags": [
          "issues"
        ],
        "summary": "Delete project issue",
        "description": "Delete project issue",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "Issue ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Delete issue",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/issue_id_delete_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_23"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters1",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/issues/{issue_id}/poc/add": {
      "post": {
        "tags": [
          "issues"
        ],
        "summary": "Add issue PoC",
        "description": "Add project issue PoC\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "Issue ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Add issue PoC",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/poc_add_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_30"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/issues/{issue_id}/poc/{poc_id}/info": {
      "post": {
        "tags": [
          "issues"
        ],
        "summary": "Project issue PoC info",
        "description": "Get project issue PoC info\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "Issue ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "poc_id",
            "in": "path",
            "description": "PoC ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Get issue information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/poc_id_info_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PoC info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_31"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/issues/{issue_id}/poc/{poc_id}/delete": {
      "post": {
        "tags": [
          "issues"
        ],
        "summary": "Delete issue PoC",
        "description": "Delect project issue PoC\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "Issue ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "poc_id",
            "in": "path",
            "description": "PoC ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Get issue information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/poc_id_delete_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_23"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/hostnames": {
      "post": {
        "tags": [
          "hosts"
        ],
        "summary": "Project hostnames",
        "description": "Get project hostnames\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project_id_hostnames_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of hostnames",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_32"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/hostname/add": {
      "post": {
        "tags": [
          "hosts"
        ],
        "summary": "Add a new hostname (or edit old one description)",
        "description": "Add hostname to host\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Token form",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hostname_add_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of hostnames",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_33"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rules": {
      "post": {
        "tags": [
          "issue rules"
        ],
        "summary": "Get list of issue rules.",
        "description": "Get list of issue rules using special filters.",
        "requestBody": {
          "description": "Filters to get issue rules",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rules_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of hostnames",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_34"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/issues/rules/use": {
      "post": {
        "tags": [
          "issue rules"
        ],
        "summary": "Use issue rules",
        "description": "Use issue rules with current project issues\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Use issue rule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rules_use_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_35"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tasks/list": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Project tasks list",
        "description": "Get list of project tasks\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Get list of tasks",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tasks_list_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tasks list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_36"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/task/{task_id}/info": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Project task info",
        "description": "Get project task info\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Get task information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task_id_info_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_37"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/task/{task_id}/delete": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Project task removal",
        "description": "Delete project task\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Delete task",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task_id_delete_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_38"
                }
              }
            }
          },
          "400": {
            "description": "Wrong parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/task/{task_id}/edit": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Project task edit",
        "description": "Edit project task\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Update task information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task_id_edit_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_39"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/task/new": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Create new project task",
        "description": "Create new project task\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Create new task",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task_new_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_40"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/example/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with \"example\" tool",
        "description": "Test tool to show plugin functionality\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Example import functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_example_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/redcheck/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with RedCheck tool",
        "description": "Import CSV-data from RedCheck tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_redcheck_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/wpscan/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with WPScan tool",
        "description": "Import JSON-data from WPScan tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_wpscan_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/theharvester/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with theHarvester tool",
        "description": "Import XML-data from theHarvester tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_theharvester_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/scanvus/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with Scanvus tool",
        "description": "Import JSON-data from theHarvester tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_scanvus_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/advanced_port_scanner/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with Advanced Port/IP Scanner tools",
        "description": "Import XML-data from Advanced Port/IP Scanner tools\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_advanced_port_scanner_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/depcheck/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with Dependency-Check tool",
        "description": "Import XML-data from Dependency-Check tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_depcheck_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/checkmarx/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with Checkmarx SAST tool",
        "description": "Import XML-data from Checkmarx SAST tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_checkmarx_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/kubehunter/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with kube-hunter tool",
        "description": "Import JSON-data from kube-hunter tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_kubehunter_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/qualys/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with Qualys tool",
        "description": "Import XML \"Scan result\"-data from Qualys tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_qualys_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/pingcastle/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with PingCastle tool",
        "description": "Import XML data from PingCastle tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_pingcastle_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/openvas/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with OpenVAS tool",
        "description": "Import XML data from OpenVAS tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_openvas_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/nikto/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with Nikto tool",
        "description": "Import XML/JSON/CSV data from Nikto tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_nikto_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/netsparker/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with NetSparker tool",
        "description": "Import XML data from NetSparker tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_netsparker_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/nessus/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with Nessus/Tenable.sc tools",
        "description": "Import XML data from Nessus/Tenable.sc tools\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_nessus_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/metasploit/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with Metasploit tool",
        "description": "Import XML data from Metasploit tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_metasploit_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/maxpatrol/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with MaxPatrol Scanner tool",
        "description": "Import XML data from MaxPatrol Scanner tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_maxpatrol_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/acunetix/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with Acunetix tool",
        "description": "Import XML data from Acunetix tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_acunetix_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/dnsrecon/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with DNSrecon tool",
        "description": "Import XML,CSV,JSON data from DNSrecon tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_dnsrecon_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}/tool/aiodnsbrute/": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Integration with aiodnsbrute tool",
        "description": "Import CSV,JSON data from aiodnsbrute tool\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        ],
        "requestBody": {
          "description": "Import report functionality",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tool_aiodnsbrute_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Errors array",
            "items": {
              "type": "string",
              "description": "Error string",
              "example": "Token expired!"
            }
          }
        },
        "description": "bad input parameters"
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Project UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Project name",
            "example": "Pentest of site.org"
          },
          "description": {
            "type": "string",
            "description": "Project description",
            "example": "Example description of project"
          },
          "folder": {
            "type": "string",
            "description": "Project folder",
            "example": "RedTeam"
          },
          "report_title": {
            "type": "string",
            "description": "Project report title",
            "example": "Official report title"
          },
          "scope": {
            "type": "string",
            "description": "Project scope information",
            "example": "All of *.site.org"
          },
          "status": {
            "type": "string",
            "description": "Archived or active project",
            "example": "archived"
          },
          "type": {
            "type": "string",
            "description": "Project type",
            "example": "pentest"
          },
          "admin_id": {
            "type": "string",
            "description": "Project admin UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "start_date": {
            "type": "integer",
            "description": "Project unix start date",
            "example": 1597104000
          },
          "end_date": {
            "type": "integer",
            "description": "Project unix start date",
            "example": 32512492800
          }
        },
        "description": "project object"
      },
      "Issue_rule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Issue rule UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Issue rule name",
            "example": "Rule to replace n -> x"
          },
          "team_id": {
            "type": "string",
            "description": "Rule's team owner, empty if owner is a user.",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "user_id": {
            "type": "string",
            "description": "Rule's user owner, empty if owner is a team.",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "team_name": {
            "type": "string",
            "description": "Owner team name, empty if non.",
            "example": "RedTeam"
          }
        },
        "description": "issue rule object"
      },
      "create_token_body": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Token name",
            "example": "Token for script",
            "default": ""
          },
          "email": {
            "type": "string",
            "description": "Account email",
            "example": "example@example.com"
          },
          "password": {
            "type": "string",
            "description": "Account password",
            "example": "P@ssw0rd"
          },
          "duration": {
            "minimum": 1,
            "type": "integer",
            "format": "seconds",
            "example": 3600,
            "default": 86400
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Access API token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "check_token_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Access API token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "creation_date": {
            "type": "integer",
            "description": "Unix-time (seconds)",
            "example": 1604662904
          },
          "duration": {
            "type": "integer",
            "description": "Token duration in seconds",
            "example": 3600
          },
          "time_left": {
            "type": "integer",
            "description": "Token time left (seconds)",
            "example": 60
          }
        }
      },
      "disable_token_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Result of operation",
            "example": "ok"
          }
        }
      },
      "user_me_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_3": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "fname": {
            "type": "string",
            "description": "User first name",
            "example": "Ilya"
          },
          "lname": {
            "type": "string",
            "description": "User last name",
            "example": "Shaposhnikov"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "iljashaposhnikov@gmail.com"
          },
          "company": {
            "type": "string",
            "description": "Company name",
            "example": "Google inc."
          },
          "teams": {
            "type": "array",
            "description": "Array of teams",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_3_teams"
            }
          }
        }
      },
      "user_uuid_info_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_4": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "fname": {
            "type": "string",
            "description": "User first name",
            "example": "Ilya"
          },
          "lname": {
            "type": "string",
            "description": "User last name",
            "example": "Shaposhnikov"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "iljashaposhnikov@gmail.com"
          },
          "company": {
            "type": "string",
            "description": "Company name",
            "example": "Google inc."
          }
        }
      },
      "teams_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_5": {
        "type": "object",
        "properties": {
          "teams": {
            "type": "array",
            "description": "Array of teams",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_3_teams"
            }
          }
        }
      },
      "team_id_info_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_6": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Team id",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Team name",
            "example": "Redteam"
          },
          "description": {
            "type": "string",
            "description": "Team description",
            "example": "Internal redteam of company"
          },
          "admin_id": {
            "type": "string",
            "description": "UUID of team administrator",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "admin_email": {
            "type": "string",
            "description": "Email of team administrator",
            "example": "iljashaposhnikov@gmail.com"
          },
          "is_admin": {
            "type": "boolean",
            "description": "If current user is admin in team",
            "example": false
          }
        }
      },
      "team_id_users_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_7": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "description": "Array of user objects",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_7_users"
            }
          }
        },
        "description": "Users array"
      },
      "team_id_projects_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_8": {
        "type": "object",
        "properties": {
          "projects": {
            "type": "array",
            "description": "Array of project objects",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          }
        },
        "description": "Projects array"
      },
      "team_id_logs_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "limit": {
            "type": "integer",
            "description": "Max amount of returned logs",
            "example": 10,
            "default": 100
          },
          "offset": {
            "type": "integer",
            "description": "Offset of logs list",
            "example": 100,
            "default": 0
          }
        }
      },
      "inline_response_200_9": {
        "type": "object",
        "properties": {
          "projects": {
            "type": "array",
            "description": "Array of project logs",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_9_projects"
            }
          }
        },
        "description": "Logs array"
      },
      "info_update_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Team name",
            "example": "redteam"
          },
          "description": {
            "type": "string",
            "description": "Team description",
            "example": "Cool team description"
          },
          "admin_email": {
            "type": "string",
            "description": "Administrator email (change careful!)",
            "example": "iljashaposhnikov@gmail.com"
          }
        }
      },
      "inline_response_200_10": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of update process",
            "example": "ok"
          }
        },
        "description": "Status of update process"
      },
      "users_add_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "email": {
            "type": "string",
            "description": "Email of user",
            "example": "iljashaposhnikov@gmail.com"
          },
          "is_admin": {
            "type": "boolean",
            "description": "Add new user admin privileges",
            "example": false
          }
        }
      },
      "inline_response_200_11": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status result",
            "example": "ok"
          }
        },
        "description": "Status of adding"
      },
      "users_delete_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "user_id": {
            "type": "string",
            "description": "User UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_12": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status result",
            "example": "ok"
          }
        },
        "description": "Status of deleting"
      },
      "users_set_admin_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "user_id": {
            "type": "string",
            "description": "User UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_13": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status result",
            "example": "ok"
          }
        },
        "description": "Status of operation"
      },
      "users_devote_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "user_id": {
            "type": "string",
            "description": "User UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "projects_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_14": {
        "type": "object",
        "properties": {
          "projects": {
            "type": "array",
            "description": "Array of project objects",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_14_projects"
            }
          }
        },
        "description": "Projects object"
      },
      "project_id_settings_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_15": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Project UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Project name",
            "example": "pentest of ..."
          },
          "description": {
            "type": "string",
            "description": "Project description",
            "example": "Long description about project"
          },
          "type": {
            "type": "string",
            "description": "Project type (pentest)",
            "example": "pentest"
          },
          "folder": {
            "type": "string",
            "description": "Project folder name",
            "example": "RedTeam"
          },
          "report_title": {
            "type": "string",
            "description": "Project report title",
            "example": "Official report title"
          },
          "scope": {
            "type": "string",
            "description": "Project scope information",
            "example": "All of *.site.org"
          },
          "start_date": {
            "type": "integer",
            "description": "Event Unix time start date",
            "example": 1602968583
          },
          "end_date": {
            "type": "integer",
            "description": "Event Unix time end date",
            "example": 1602968584
          },
          "status": {
            "type": "string",
            "description": "Status of project (active/archived)",
            "example": "active"
          },
          "auto_archive": {
            "type": "boolean",
            "description": "Will be autoarchived after end_time",
            "example": true
          },
          "admin_id": {
            "type": "string",
            "description": "Admin user UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "testers": {
            "type": "array",
            "description": "Array of project testers",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_14_testers"
            }
          },
          "teams": {
            "type": "array",
            "description": "Array of project teams",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_14_teams"
            }
          }
        },
        "description": "Projects settings object"
      },
      "settings_edit_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Project name",
            "example": "pentest of ..."
          },
          "description": {
            "type": "string",
            "description": "Project description",
            "example": "Long description about project"
          },
          "folder": {
            "type": "string",
            "description": "Project folder",
            "example": "RedTeam"
          },
          "report_title": {
            "type": "string",
            "description": "Project report title",
            "example": "Official report title"
          },
          "type": {
            "type": "string",
            "description": "Project type (pentest)",
            "example": "pentest"
          },
          "scope": {
            "type": "string",
            "description": "Project scope information",
            "example": "All of *.site.org"
          },
          "start_date": {
            "type": "integer",
            "description": "Event Unix time start date",
            "example": 1602968583
          },
          "end_date": {
            "type": "integer",
            "description": "Event Unix time end date",
            "example": 1602968584
          },
          "status": {
            "type": "string",
            "description": "Status of project (active/archived)",
            "example": "active"
          },
          "auto_archive": {
            "type": "boolean",
            "description": "Will be autoarchived after end_time",
            "example": true
          },
          "testers": {
            "type": "array",
            "description": "Array of project testers",
            "items": {
              "type": "string",
              "description": "User UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          "teams": {
            "type": "array",
            "description": "Array of project teams",
            "items": {
              "type": "string",
              "description": "Team UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        }
      },
      "project_new_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Project name",
            "example": "pentest of ..."
          },
          "description": {
            "type": "string",
            "description": "Project description",
            "example": "Long description about project"
          },
          "type": {
            "type": "string",
            "description": "Project type (pentest)",
            "example": "pentest"
          },
          "folder": {
            "type": "string",
            "description": "Folder name",
            "example": "RedTeam"
          },
          "report_title": {
            "type": "string",
            "description": "Project report title",
            "example": "Official report title"
          },
          "scope": {
            "type": "string",
            "description": "Project scope information",
            "example": "All of *.site.org"
          },
          "start_date": {
            "type": "integer",
            "description": "Event Unix time start date",
            "example": 1602968583
          },
          "end_date": {
            "type": "integer",
            "description": "Event Unix time end date",
            "example": 1602968584
          },
          "auto_archive": {
            "type": "boolean",
            "description": "Will be autoarchived after end_time",
            "example": true
          },
          "testers": {
            "type": "array",
            "description": "Array of project testers",
            "items": {
              "type": "string",
              "description": "User UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          "teams": {
            "type": "array",
            "description": "Array of project teams",
            "items": {
              "type": "string",
              "description": "Team UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        }
      },
      "inline_response_200_16": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "description": "Created project UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        },
        "description": "Project information"
      },
      "project_id_hosts_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_17": {
        "type": "object",
        "properties": {
          "hosts": {
            "type": "array",
            "description": "Array of project hosts",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_17_hosts"
            }
          }
        }
      },
      "host_id_info_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_18": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Host UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "ip": {
            "type": "string",
            "description": "Host IPv4 or IPv6",
            "example": "127.0.0.1"
          },
          "description": {
            "type": "string",
            "description": "Host description",
            "example": "Main site of company"
          },
          "os": {
            "type": "string",
            "description": "Operating System",
            "example": "Windows 7"
          },
          "hostnames": {
            "type": "array",
            "description": "Array of hostnames",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_17_hostnames"
            }
          },
          "issues": {
            "type": "array",
            "description": "Array of project teams",
            "items": {
              "type": "string",
              "description": "Issue UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          "ports": {
            "type": "array",
            "description": "Array of host ports",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_18_ports"
            }
          }
        },
        "description": "Projects settings object"
      },
      "host_id_edit_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "description": {
            "type": "string",
            "description": "Host description",
            "example": "Gateway of company"
          },
          "threats": {
            "type": "array",
            "description": "Array of host flags",
            "items": {
              "type": "string",
              "description": "Host flag",
              "example": "[\"high\",\"medium\",\"low\",\"info\",\"check\",\"checked\"]"
            }
          },
          "os": {
            "type": "string",
            "description": "Host operating system",
            "example": "Windows 7"
          }
        }
      },
      "inline_response_200_19": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of operation",
            "example": "ok"
          }
        },
        "description": "Status of operation"
      },
      "host_id_delete_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "host_new_body": {
        "required": [
          "access_token",
          "ip"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "ip": {
            "type": "string",
            "description": "IP of host",
            "example": "127.0.0.1"
          },
          "description": {
            "type": "string",
            "description": "Host description",
            "example": "Main server"
          }
        }
      },
      "inline_response_200_20": {
        "type": "object",
        "properties": {
          "host_id": {
            "type": "string",
            "description": "Host UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        },
        "description": "Status of operation"
      },
      "port_new_body": {
        "required": [
          "access_token",
          "host_id",
          "port"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "port": {
            "type": "integer",
            "description": "Port number",
            "example": 8080
          },
          "host_id": {
            "type": "string",
            "description": "Host UUID of port",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "description": {
            "type": "string",
            "description": "Port description",
            "example": "Web server"
          },
          "service": {
            "type": "string",
            "description": "Port service",
            "example": "HTTP"
          },
          "is_tcp": {
            "type": "boolean",
            "description": "If port is TCP",
            "example": true
          }
        }
      },
      "inline_response_200_21": {
        "type": "object",
        "properties": {
          "port_id": {
            "type": "string",
            "description": "Port UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        },
        "description": "Status of operation"
      },
      "port_id_info_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_22": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Port UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "host_id": {
            "type": "string",
            "description": "Host UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "is_tcp": {
            "type": "boolean",
            "description": "If port is TCP",
            "example": true
          },
          "port": {
            "type": "integer",
            "description": "Port number",
            "example": 8080
          },
          "service": {
            "type": "string",
            "description": "Port service name",
            "example": "HTTP"
          },
          "description": {
            "type": "string",
            "description": "Port description",
            "example": "Web server"
          },
          "issues": {
            "type": "array",
            "description": "array of issues",
            "items": {
              "type": "string",
              "description": "Issue UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        },
        "description": "Port object"
      },
      "port_id_edit_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "service": {
            "type": "string",
            "description": "Port service name",
            "example": "HTTP"
          },
          "description": {
            "type": "string",
            "description": "Port description",
            "example": "Web server"
          }
        }
      },
      "inline_response_200_23": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of operation",
            "example": "ok"
          }
        },
        "description": "Operation status"
      },
      "port_id_delete_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "project_id_networks_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_24": {
        "type": "object",
        "properties": {
          "networks": {
            "type": "array",
            "description": "Networks array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_24_networks"
            }
          }
        },
        "description": "Networks array object"
      },
      "network_id_info_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_25": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Network UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "description": {
            "type": "string",
            "description": "Network description",
            "example": "Internal company network"
          },
          "name": {
            "type": "string",
            "description": "Network name",
            "example": "Office"
          },
          "ip": {
            "type": "string",
            "description": "Network IP",
            "example": "192.168.0.0"
          },
          "is_ipv6": {
            "type": "string",
            "description": "If network is IPv6",
            "example": "false"
          },
          "mask": {
            "type": "integer",
            "description": "Network mask",
            "example": 24
          },
          "asn": {
            "type": "integer",
            "description": "Network ASN number",
            "example": 1337
          },
          "internal_ip": {
            "type": "string",
            "description": "Tester internal IP",
            "example": "192.168.0.100"
          },
          "access_from": {
            "$ref": "#/components/schemas/projectproject_idnetworknetwork_idedit_access_from"
          },
          "cmd": {
            "type": "string",
            "description": "Connection command",
            "example": "ssh -D 8888 root@192.168.0.1"
          },
          "hosts": {
            "type": "array",
            "description": "Network hosts array",
            "items": {
              "type": "string",
              "description": "Host UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        },
        "description": "Networks array object"
      },
      "projectproject_idnetworknetwork_idedit_access_from": {
        "type": "object",
        "properties": {
          "ad236cdb-f645-456c-918c-dd8d8085ae95": {
            "type": "array",
            "description": "Port UUID",
            "items": {
              "type": "string",
              "description": "Hostname UUID (\"0\" - only ip)",
              "example": "[\"0\",\"ad236cdb-f645-456c-918c-dd8d8085ae95\"]"
            }
          }
        },
        "description": "Which hosts/services can access this network"
      },
      "network_id_edit_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "description": {
            "type": "string",
            "description": "Network description",
            "example": "Internal company network"
          },
          "name": {
            "type": "string",
            "description": "Network name",
            "example": "Office network"
          },
          "ip": {
            "type": "string",
            "description": "Network IP",
            "example": "192.168.0.0"
          },
          "mask": {
            "type": "integer",
            "description": "Network mask",
            "example": 24
          },
          "asn": {
            "type": "integer",
            "description": "Network ASN number",
            "example": 1337
          },
          "internal_ip": {
            "type": "string",
            "description": "Tester internal IP",
            "example": "192.168.0.100"
          },
          "access_from": {
            "$ref": "#/components/schemas/projectproject_idnetworknetwork_idedit_access_from"
          },
          "cmd": {
            "type": "string",
            "description": "Connection command",
            "example": "ssh -D 8888 root@192.168.0.1"
          }
        }
      },
      "network_id_delete_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "network_create_body": {
        "required": [
          "access_token",
          "ip",
          "mask"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "description": {
            "type": "string",
            "description": "Network description",
            "example": "Internal company network"
          },
          "name": {
            "type": "string",
            "description": "Network name",
            "example": "Office"
          },
          "ip": {
            "type": "string",
            "description": "Network IP",
            "example": "192.168.0.0"
          },
          "mask": {
            "type": "integer",
            "description": "Network mask",
            "example": 24
          },
          "asn": {
            "type": "integer",
            "description": "Network ASN number",
            "example": 1337
          },
          "internal_ip": {
            "type": "string",
            "description": "Tester internal IP",
            "example": "192.168.0.100"
          },
          "access_from": {
            "$ref": "#/components/schemas/projectproject_idnetworknetwork_idedit_access_from"
          },
          "cmd": {
            "type": "string",
            "description": "Connection command",
            "example": "ssh -D 8888 root@192.168.0.1"
          }
        }
      },
      "inline_response_200_26": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of operation",
            "example": "ok"
          },
          "network_id": {
            "type": "string",
            "description": "Created network UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        },
        "description": "Operation status"
      },
      "issues_list_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_27": {
        "type": "object",
        "properties": {
          "issues": {
            "type": "array",
            "description": "array of issues",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_27_issues"
            }
          }
        },
        "description": "Issue list results"
      },
      "projectproject_idissuessearch_fields": {
        "type": "object",
        "properties": {
          "example_field": {
            "type": "string",
            "description": "Search by additional field \"example_field\" (% - any string)",
            "example": "%1234%",
            "default": "%"
          }
        },
        "description": "Dictionary with additional issue fields",
        "example": "{\"nessus_id\":\"%1234%\"}"
      },
      "issues_search_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "issue_id": {
            "type": "string",
            "description": "Search by issue UUID (% - any string, \\_ - any char)",
            "example": "ad236cdb-____-%",
            "default": "%"
          },
          "name": {
            "type": "string",
            "description": "Search by issue name (% - any string, \\_ - any char)",
            "example": "test-name_-%",
            "default": "%"
          },
          "cvss": {
            "type": "string",
            "description": "Search by issue CVSS (% - any string, \\_ - any char)",
            "example": "9._%",
            "default": "%"
          },
          "url_path": {
            "type": "string",
            "description": "Search by issue URL path (% - any string, \\_ - any char)",
            "example": "/%/admin?_",
            "default": "%"
          },
          "description": {
            "type": "string",
            "description": "Search by issue description (% - any string, \\_ - any char)",
            "example": "%Critical issue number _ %",
            "default": "%"
          },
          "cve": {
            "type": "string",
            "description": "Search by issue CVE (% - any string, \\_ - any char)",
            "example": "CVE-%-202_",
            "default": "%"
          },
          "cwe": {
            "type": "string",
            "description": "Search by issue CWE (% - any string, \\_ - any char)",
            "example": "%1_2",
            "default": "%"
          },
          "status": {
            "type": "string",
            "description": "Search by issue status (% - any string, \\_ - any char)",
            "example": "Need __ %",
            "default": "%"
          },
          "fix": {
            "type": "string",
            "description": "Search by issue fix (% - any string, \\_ - any char)",
            "example": "To fix ____ you need %",
            "default": "%"
          },
          "param": {
            "type": "string",
            "description": "Search by issue parameters (% - any string, \\_ - any char)",
            "example": "(%)admin=_",
            "default": "%"
          },
          "type": {
            "type": "string",
            "description": "Search by issue type (% - any string, \\_ - any char)",
            "example": "%web_%",
            "default": "%"
          },
          "technical": {
            "type": "string",
            "description": "Search by issue technical info (% - any string, \\_ - any char)",
            "example": "To exploit _____ issue you need to %",
            "default": "%"
          },
          "risks": {
            "type": "string",
            "description": "Search by issue risks info (% - any string, \\_ - any char)",
            "example": "Attacker ____ can do %",
            "default": "%"
          },
          "references": {
            "type": "string",
            "description": "Search by issue references (% - any string, \\_ - any char)",
            "example": "%mitre.org%/____",
            "default": "%"
          },
          "intruder": {
            "type": "string",
            "description": "Search by issue intruder info (% - any string, \\_ - any char)",
            "example": "%Intruder _____",
            "default": "%"
          },
          "fields": {
            "$ref": "#/components/schemas/projectproject_idissuessearch_fields"
          }
        }
      },
      "issue_id_info_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_28": {
        "type": "object",
        "properties": {
          "cve": {
            "type": "string",
            "description": "Issue CVE",
            "example": "CVE-2020-1234",
            "default": ""
          },
          "cvss": {
            "type": "number",
            "description": "Issue CVSS",
            "example": 10,
            "default": 0
          },
          "cwe": {
            "type": "integer",
            "description": "Issue CWE",
            "example": 123,
            "default": 0
          },
          "description": {
            "type": "string",
            "description": "Issue description",
            "example": "SQL injection at...",
            "default": ""
          },
          "fix": {
            "type": "string",
            "description": "Fix of vulnerability",
            "example": "To fix this vulnerability you just need...",
            "default": ""
          },
          "name": {
            "type": "string",
            "description": "Name of issue",
            "example": "SSRF"
          },
          "param": {
            "type": "string",
            "description": "Vulnerable params",
            "example": "GET id=1",
            "default": ""
          },
          "status": {
            "type": "string",
            "description": "Status of issue",
            "example": "Comfirmed",
            "default": "need to recheck"
          },
          "type": {
            "type": "string",
            "description": "Type of issue",
            "example": "Web",
            "default": "custom"
          },
          "url_path": {
            "type": "string",
            "description": "URL of issue",
            "example": "/admin/",
            "default": ""
          },
          "technical": {
            "type": "string",
            "description": "Issue technical information",
            "example": "You can use exploit...",
            "default": ""
          },
          "risks": {
            "type": "string",
            "description": "Issue exploitation risks",
            "example": "Some risks during exploitation",
            "default": ""
          },
          "references": {
            "type": "string",
            "description": "Links with issue information",
            "example": "http://test.org/",
            "default": ""
          },
          "intruder": {
            "type": "string",
            "description": "Type of intruder",
            "example": "Internal",
            "default": ""
          },
          "services": {
            "$ref": "#/components/schemas/projectproject_idissuescreate_services"
          },
          "pocs": {
            "$ref": "#/components/schemas/inline_response_200_28_pocs"
          },
          "fields": {
            "$ref": "#/components/schemas/inline_response_200_27_fields"
          }
        },
        "description": "Issue object"
      },
      "projectproject_idissuescreate_services": {
        "type": "object",
        "properties": {
          "ad236cdb-f645-456c-918c-dd8d8085ae95": {
            "type": "array",
            "description": "Port UUID",
            "items": {
              "type": "string",
              "description": "Hostname UUID (\"0\" - only ip)",
              "example": "[\"0\",\"ad236cdb-f645-456c-918c-dd8d8085ae95\"]"
            }
          }
        },
        "description": "Which hosts/services are vulnerable"
      },
      "projectproject_idissuescreate_fields_nessus_id": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of field - text/float/number/boolean",
            "example": "number",
            "enum": [
              "text",
              "float",
              "number",
              "boolean"
            ]
          },
          "val": {
            "description": "Field value",
            "example": 1337,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              }
            ]
          }
        },
        "description": "Example field - nessus_id"
      },
      "projectproject_idissuescreate_fields": {
        "type": "object",
        "properties": {
          "nessus_id": {
            "$ref": "#/components/schemas/projectproject_idissuescreate_fields_nessus_id"
          }
        },
        "description": "Additional issue fields"
      },
      "issues_create_body": {
        "required": [
          "access_token",
          "name"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "cve": {
            "type": "string",
            "description": "Issue CVE",
            "example": "CVE-2020-1234",
            "default": ""
          },
          "cvss": {
            "type": "number",
            "description": "Issue CVSS",
            "example": 10,
            "default": 0
          },
          "cwe": {
            "type": "integer",
            "description": "Issue CWE",
            "example": 123,
            "default": 0
          },
          "description": {
            "type": "string",
            "description": "Issue description",
            "example": "SQL injection at...",
            "default": ""
          },
          "fix": {
            "type": "string",
            "description": "Fix of vulnerability",
            "example": "To fix this vulnerability you just need...",
            "default": ""
          },
          "name": {
            "type": "string",
            "description": "Name of issue",
            "example": "SSRF"
          },
          "param": {
            "type": "string",
            "description": "Vulnerable params",
            "example": "GET id=1",
            "default": ""
          },
          "status": {
            "type": "string",
            "description": "Status of issue",
            "example": "Comfirmed",
            "default": "need to recheck"
          },
          "type": {
            "type": "string",
            "description": "Type of issue",
            "example": "Web",
            "default": "custom"
          },
          "url_path": {
            "type": "string",
            "description": "URL of issue",
            "example": "/admin/",
            "default": ""
          },
          "technical": {
            "type": "string",
            "description": "Issue technical information",
            "example": "You can use exploit...",
            "default": ""
          },
          "risks": {
            "type": "string",
            "description": "Issue exploitation risks",
            "example": "Some risks during exploitation",
            "default": ""
          },
          "references": {
            "type": "string",
            "description": "Links with issue information",
            "example": "http://test.org/",
            "default": ""
          },
          "intruder": {
            "type": "string",
            "description": "Type of intruder",
            "example": "Internal",
            "default": ""
          },
          "services": {
            "$ref": "#/components/schemas/projectproject_idissuescreate_services"
          },
          "fields": {
            "$ref": "#/components/schemas/projectproject_idissuescreate_fields"
          },
          "dublicate_find": {
            "type": "boolean",
            "description": "find dublicate issues and add services",
            "example": true,
            "default": false
          }
        }
      },
      "inline_response_200_29": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of operation",
            "example": "ok"
          },
          "issue_id": {
            "type": "string",
            "description": "Created issue UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        },
        "description": "Operation status"
      },
      "projectproject_idissuesissue_idedit_fields_nessus_id": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of field",
            "example": "number",
            "enum": [
              "text",
              "float",
              "number",
              "boolean"
            ]
          },
          "val": {
            "description": "Field value",
            "example": 1337,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              }
            ]
          }
        },
        "description": "Example field - nessus_id"
      },
      "projectproject_idissuesissue_idedit_fields": {
        "type": "object",
        "properties": {
          "nessus_id": {
            "$ref": "#/components/schemas/projectproject_idissuesissue_idedit_fields_nessus_id"
          }
        },
        "description": "Additional issue fields"
      },
      "issue_id_edit_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "cve": {
            "type": "string",
            "description": "Issue CVE",
            "example": "CVE-2020-1234"
          },
          "cvss": {
            "type": "number",
            "description": "Issue CVSS",
            "example": 10
          },
          "cwe": {
            "type": "integer",
            "description": "Issue CWE",
            "example": 123
          },
          "description": {
            "type": "string",
            "description": "Issue description",
            "example": "SQL injection at..."
          },
          "fix": {
            "type": "string",
            "description": "Fix of vulnerability",
            "example": "To fix this vulnerability you just need..."
          },
          "name": {
            "type": "string",
            "description": "Name of issue",
            "example": "SSRF"
          },
          "param": {
            "type": "string",
            "description": "Vulnerable params",
            "example": "GET id=1"
          },
          "status": {
            "type": "string",
            "description": "Status of issue",
            "example": "Comfirmed"
          },
          "type": {
            "type": "string",
            "description": "Type of issue",
            "example": "Web"
          },
          "url_path": {
            "type": "string",
            "description": "URL of issue",
            "example": "/admin/"
          },
          "technical": {
            "type": "string",
            "description": "Issue technical information",
            "example": "You can use exploit..."
          },
          "risks": {
            "type": "string",
            "description": "Issue exploitation risks",
            "example": "Some risks during exploitation"
          },
          "references": {
            "type": "string",
            "description": "Links with issue information",
            "example": "http://test.org/"
          },
          "intruder": {
            "type": "string",
            "description": "Type of intruder",
            "example": "Internal"
          },
          "services": {
            "$ref": "#/components/schemas/projectproject_idissuescreate_services"
          },
          "fields": {
            "$ref": "#/components/schemas/projectproject_idissuesissue_idedit_fields"
          }
        }
      },
      "issue_id_delete_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "poc_add_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "description": {
            "type": "string",
            "description": "PoC description",
            "example": "Screenshot of ..."
          },
          "type": {
            "type": "string",
            "description": "PoC type (text/image)",
            "example": "image"
          },
          "b64content": {
            "type": "string",
            "description": "Base64 content of PoC file",
            "example": "UGVudGVzdCBDb2xsYWJvcmF0aW9uIEZyYW1ld29yaw=="
          },
          "port_id": {
            "type": "string",
            "description": "UUID of port to connect",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95",
            "default": "0"
          },
          "hostname_id": {
            "type": "string",
            "description": "UUID of hostname",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95",
            "default": "0"
          }
        }
      },
      "inline_response_200_30": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of operation",
            "example": "ok"
          },
          "poc_id": {
            "type": "string",
            "description": "Created PoC UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        },
        "description": "Operation status"
      },
      "poc_id_info_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_31": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "description": "PoC filename",
            "example": "exploit.py"
          },
          "id": {
            "type": "string",
            "description": "PoC UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "port_id": {
            "type": "string",
            "description": "Port UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95",
            "default": "0"
          },
          "hostname_id": {
            "type": "string",
            "description": "Hostname UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95",
            "default": "0"
          },
          "description": {
            "type": "string",
            "description": "PoC description",
            "example": "Screenshot of ..."
          },
          "path": {
            "type": "string",
            "description": "PoC download path",
            "example": "/static/files/poc/ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "priority": {
            "type": "integer",
            "description": "PoC priority 0/1",
            "example": 1
          },
          "type": {
            "type": "string",
            "description": "PoC filetype image/text",
            "example": "image"
          }
        },
        "description": "PoC object"
      },
      "poc_id_delete_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "project_id_hostnames_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_32": {
        "type": "object",
        "properties": {
          "hostnames": {
            "type": "array",
            "description": "Array of project hostnames",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_32_hostnames"
            }
          }
        }
      },
      "hostname_add_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "hostname": {
            "type": "string",
            "description": "New hostname",
            "example": "www.google.com"
          },
          "description": {
            "type": "string",
            "description": "Hostname description",
            "example": "Main site of company"
          },
          "host_id": {
            "type": "string",
            "description": "Host UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_33": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "New or Edited hostname UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "rules_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "user_id": {
            "type": "string",
            "description": "Owner User UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "team_id": {
            "type": "string",
            "description": "Owner Team UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "rule_ids": {
            "type": "array",
            "description": "List of rule UUIDs to return.",
            "items": {
              "type": "string",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        }
      },
      "inline_response_200_34": {
        "properties": {
          "result": {
            "type": "array",
            "description": "List of found issue rules",
            "items": {
              "$ref": "#/components/schemas/Issue_rule"
            }
          }
        }
      },
      "rules_use_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "issue_ids": {
            "type": "array",
            "description": "Array with project issue UUIDs",
            "items": {
              "type": "string",
              "description": "project issue UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          "rule_ids": {
            "type": "array",
            "description": "Array with issue rule UUIDs",
            "items": {
              "type": "string",
              "description": "issue rule UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        }
      },
      "inline_response_200_35": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of operation",
            "example": "ok"
          },
          "updated_issues": {
            "type": "integer",
            "description": "Amount of changed issues",
            "example": 1337
          }
        },
        "description": "Operation status"
      },
      "tasks_list_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_36": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "description": "array of tasks",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_36_tasks"
            }
          }
        },
        "description": "Tasks list results"
      },
      "task_id_info_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_37": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Check XSS at...",
            "default": ""
          },
          "task_id": {
            "type": "string",
            "description": "UUID of task",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Name of task",
            "example": "NMAP Scan"
          },
          "status": {
            "type": "string",
            "description": "Status of task",
            "example": "done",
            "default": "todo",
            "enum": [
              "todo",
              "progress",
              "review",
              "done"
            ]
          },
          "criticality": {
            "type": "string",
            "description": "Criticality of task",
            "example": "medium",
            "default": "info",
            "enum": [
              "critical",
              "high",
              "medium",
              "low",
              "info"
            ]
          },
          "start_date": {
            "type": "number",
            "description": "Task start date (unix-time)",
            "example": 1664625623,
            "default": 0
          },
          "finish_date": {
            "type": "number",
            "description": "Task finish date (unix-time)",
            "example": 1664625623,
            "default": 0
          },
          "users": {
            "type": "array",
            "description": "Array of user objects",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_36_users"
            }
          },
          "teams": {
            "type": "array",
            "description": "Array of team objects",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_36_teams"
            }
          },
          "services": {
            "$ref": "#/components/schemas/projectproject_idtasktask_idedit_services"
          }
        },
        "description": "Task object"
      },
      "task_id_delete_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        }
      },
      "inline_response_200_38": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of operation",
            "example": "ok",
            "default": "ok"
          }
        },
        "description": "Task removal status"
      },
      "projectproject_idtasktask_idedit_services": {
        "type": "object",
        "properties": {
          "ad236cdb-f645-456c-918c-dd8d8085ae95": {
            "type": "array",
            "description": "Port UUID",
            "items": {
              "type": "string",
              "description": "Hostname UUID (\"0\" - only ip)",
              "example": "[\"0\",\"ad236cdb-f645-456c-918c-dd8d8085ae95\"]"
            }
          }
        },
        "description": "Which hosts/services are in TODO task (\"0/tcp\" - all host)"
      },
      "task_id_edit_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Check XSS at...",
            "default": ""
          },
          "name": {
            "type": "string",
            "description": "Name of task",
            "example": "NMAP Scan"
          },
          "status": {
            "type": "string",
            "description": "Status of task",
            "example": "done",
            "default": "todo",
            "enum": [
              "todo",
              "progress",
              "review",
              "done"
            ]
          },
          "criticality": {
            "type": "string",
            "description": "Criticality of task",
            "example": "medium",
            "default": "info",
            "enum": [
              "critical",
              "high",
              "medium",
              "low",
              "info"
            ]
          },
          "start_date": {
            "type": "number",
            "description": "Task start date (unix-time)",
            "example": 1664625623,
            "default": 0
          },
          "finish_date": {
            "type": "number",
            "description": "Task finish date (unix-time)",
            "example": 1664625623,
            "default": 0
          },
          "users": {
            "type": "array",
            "description": "Array of user objects",
            "items": {
              "type": "string",
              "description": "User UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          "teams": {
            "type": "array",
            "description": "Array of team objects",
            "items": {
              "type": "string",
              "description": "Team UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          },
          "services": {
            "$ref": "#/components/schemas/projectproject_idtasktask_idedit_services"
          }
        }
      },
      "inline_response_200_39": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of operation",
            "example": "ok",
            "default": "ok"
          }
        },
        "description": "Task update status"
      },
      "task_new_body": {
        "required": [
          "access_token",
          "name"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Check XSS at...",
            "default": ""
          },
          "name": {
            "type": "string",
            "description": "Name of task",
            "example": "NMAP Scan"
          },
          "status": {
            "type": "string",
            "description": "Status of task",
            "example": "done",
            "default": "todo",
            "enum": [
              "todo",
              "progress",
              "review",
              "done"
            ]
          },
          "criticality": {
            "type": "string",
            "description": "Criticality of task",
            "example": "medium",
            "default": "info",
            "enum": [
              "critical",
              "high",
              "medium",
              "low",
              "info"
            ]
          },
          "start_date": {
            "type": "number",
            "description": "Task start date (unix-time)",
            "example": 1664625623,
            "default": 0
          },
          "finish_date": {
            "type": "number",
            "description": "Task finish date (unix-time)",
            "example": 1664625623,
            "default": 0
          },
          "users": {
            "type": "array",
            "description": "Array of user objects",
            "items": {
              "type": "string",
              "description": "User UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            },
            "default": []
          },
          "teams": {
            "type": "array",
            "description": "Array of team objects",
            "items": {
              "type": "string",
              "description": "Team UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            },
            "default": []
          },
          "services": {
            "$ref": "#/components/schemas/projectproject_idtasktask_idedit_services"
          }
        }
      },
      "inline_response_200_40": {
        "type": "object",
        "properties": {
          "task_id": {
            "type": "string",
            "description": "Created task UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        },
        "description": "Created task id"
      },
      "tool_example_body": {
        "required": [
          "access_token",
          "example_required_text",
          "json_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "json_files": {
            "type": "string",
            "description": "One(!) file, encoded to base64",
            "example": "MTIzNA==",
            "default": ""
          },
          "example_text": {
            "type": "string",
            "description": "Text input",
            "example": "example default value"
          },
          "example_required_text": {
            "type": "string",
            "description": "Required text",
            "example": "example default value"
          },
          "example_number": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "description": "Number input from 1 to 65535",
            "example": 1234,
            "default": 1337
          },
          "example_checkbox": {
            "type": "boolean",
            "description": "Checkbox input",
            "example": false,
            "default": true
          }
        }
      },
      "inline_response_200_41": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "List of errors",
            "items": {
              "type": "string",
              "description": "Error string",
              "example": "Example string with error information"
            }
          }
        },
        "description": "Result object"
      },
      "tool_redcheck_body": {
        "required": [
          "access_token",
          "csv_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "csv_files": {
            "type": "string",
            "description": "One(!) report .csv file, encoded to base64",
            "example": "MTIzNA==",
            "default": ""
          },
          "hosts_description": {
            "type": "string",
            "description": "Hosts description",
            "example": "RedCheck scan 2023",
            "default": "Added from RedCheck scan"
          },
          "hostnames_description": {
            "type": "string",
            "description": "Hostnames description",
            "example": "RedCheck scan 2023",
            "default": "Added from RedCheck scan"
          },
          "ports_description": {
            "type": "string",
            "description": "Ports description",
            "example": "RedCheck scan 2023",
            "default": "Added from RedCheck scan"
          }
        }
      },
      "tool_wpscan_body": {
        "required": [
          "access_token",
          "json_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "json_files": {
            "type": "string",
            "description": "One(!) report .json file, encoded to base64",
            "example": "eyJhIjoiYmMifQ==",
            "default": ""
          },
          "host": {
            "type": "string",
            "description": "Host IP (only if scan was with DNS-name URL)",
            "example": "8.8.8.8",
            "default": ""
          },
          "auto_resolve": {
            "type": "boolean",
            "description": "Automatic resolve ip from server (only if scan was with DNS-name URL)",
            "example": true,
            "default": false
          }
        }
      },
      "tool_theharvester_body": {
        "required": [
          "access_token",
          "xml_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "xml_files": {
            "type": "string",
            "description": "One(!) report .xml file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "hosts_description": {
            "type": "string",
            "description": "Hosts description",
            "example": "Scan 10.2023",
            "default": "Added from theHarvester scan"
          },
          "hostnames_description": {
            "type": "string",
            "description": "Hostnames description",
            "example": "Scan 10.2023",
            "default": "Added from theHarvester scan"
          }
        }
      },
      "tool_scanvus_body": {
        "required": [
          "access_token",
          "json_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "json_files": {
            "type": "string",
            "description": "One(!) report .json file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "hosts_description": {
            "type": "string",
            "description": "New host description",
            "example": "New Scanvus execution",
            "default": "Added from Scanvus"
          },
          "ip": {
            "type": "string",
            "description": "Scanned IP-address",
            "example": "8.8.8.8"
          }
        }
      },
      "tool_advanced_port_scanner_body": {
        "required": [
          "access_token",
          "files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "files": {
            "type": "string",
            "description": "One(!) report .xml file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "hosts_description": {
            "type": "string",
            "description": "New host description",
            "example": "New Advanced Port Scanner execution",
            "default": "Added from Advanced Port Scanner"
          },
          "hostnames_description": {
            "type": "string",
            "description": "New hostname description",
            "example": "New Advanced Port Scanner execution",
            "default": "Added from Advanced Port Scanner"
          },
          "ignore_ports": {
            "type": "string",
            "description": "Ignore ports",
            "example": "22,80",
            "default": "554,7070"
          },
          "add_no_open": {
            "type": "string",
            "description": "Add hosts without open ports",
            "example": "true",
            "default": "false"
          }
        }
      },
      "tool_depcheck_body": {
        "required": [
          "access_token",
          "xml_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "xml_files": {
            "type": "string",
            "description": "One(!) report .xml file, encoded to base64",
            "example": "PD4=",
            "default": ""
          }
        }
      },
      "tool_checkmarx_body": {
        "required": [
          "access_token",
          "xml_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "xml_files": {
            "type": "string",
            "description": "One(!) report .xml file, encoded to base64",
            "example": "PD4=",
            "default": ""
          }
        }
      },
      "tool_kubehunter_body": {
        "required": [
          "access_token",
          "json_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "json_files": {
            "type": "string",
            "description": "One(!) report .json file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "hosts_description": {
            "type": "string",
            "description": "New host description",
            "example": "New host from kube-scan",
            "default": "Added from kube-hunter scan"
          },
          "ports_description": {
            "type": "string",
            "description": "New host description",
            "example": "New port from kube-scan",
            "default": "Added from kube-hunter scan"
          }
        }
      },
      "tool_qualys_body": {
        "required": [
          "access_token",
          "xml_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "xml_files": {
            "type": "string",
            "description": "One(!) report \"Scan Result\" .xml file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "hosts_description": {
            "type": "string",
            "description": "New host description",
            "example": "New host from Qualys",
            "default": "Added from Qualys scan"
          },
          "ports_description": {
            "type": "string",
            "description": "New host description",
            "example": "New port from Qualys",
            "default": "Added from Qualys scan"
          },
          "add_empty_host": {
            "type": "boolean",
            "description": "Add hosts without ports/issues",
            "example": true,
            "default": false
          }
        }
      },
      "tool_pingcastle_body": {
        "required": [
          "access_token",
          "xml_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "xml_files": {
            "type": "string",
            "description": "One(!) report .xml file, encoded to base64",
            "example": "PD4=",
            "default": ""
          }
        }
      },
      "tool_openvas_body": {
        "required": [
          "access_token",
          "xml_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "xml_files": {
            "type": "string",
            "description": "One(!) report .xml file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "hosts_description": {
            "type": "string",
            "description": "New host description",
            "example": "New OpenVAS scan",
            "default": "Added from OpenVAS scan"
          },
          "ports_description": {
            "type": "string",
            "description": "New port description",
            "example": "New OpenVAS scan",
            "default": "Added from OpenVAS scan"
          },
          "hostnames_description": {
            "type": "string",
            "description": "New hostname description",
            "example": "New OpenVAS scan",
            "default": "Added from OpenVAS scan"
          }
        }
      },
      "tool_nikto_body": {
        "required": [
          "access_token",
          "csv_files",
          "json_files",
          "xml_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "xml_files": {
            "type": "string",
            "description": "One(!) report .xml file, encoded to base64 (set empty string to ignore)",
            "example": "PD4=",
            "default": ""
          },
          "csv_files": {
            "type": "string",
            "description": "One(!) report .csv file, encoded to base64 (set empty string to ignore)",
            "example": "PD4=",
            "default": ""
          },
          "json_files": {
            "type": "string",
            "description": "One(!) report .json file, encoded to base64 (set empty string to ignore)",
            "example": "PD4=",
            "default": ""
          },
          "hosts_description": {
            "type": "string",
            "description": "New host description",
            "example": "New Nikto scan",
            "default": "Added from Nikto scan"
          },
          "ports_description": {
            "type": "string",
            "description": "New port description",
            "example": "New Nikto scan",
            "default": "Added from Nikto scan"
          },
          "hostnames_description": {
            "type": "string",
            "description": "New hostname description",
            "example": "New Nikto scan",
            "default": "Added from Nikto scan"
          }
        }
      },
      "tool_netsparker_body": {
        "required": [
          "access_token",
          "xml_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "xml_files": {
            "type": "string",
            "description": "One(!) report .xml file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "hosts_description": {
            "type": "string",
            "description": "New host description",
            "example": "New NetSparker scan",
            "default": "Added from NetSparker scan"
          },
          "ports_description": {
            "type": "string",
            "description": "New port description",
            "example": "New NetSparker scan",
            "default": "Added from NetSparker scan"
          },
          "hostnames_description": {
            "type": "string",
            "description": "New hostname description",
            "example": "New NetSparker scan",
            "default": "Added from NetSparker scan"
          },
          "only_confirmed": {
            "type": "boolean",
            "description": "Add only confirmed vulnerabilities",
            "example": false,
            "default": true
          }
        }
      },
      "tool_nessus_body": {
        "required": [
          "access_token",
          "xml_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "xml_files": {
            "type": "string",
            "description": "One(!) report .xml/.nessus file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "add_info_issues": {
            "type": "boolean",
            "description": "Import informational issues too (severity=0)",
            "example": true,
            "default": false
          },
          "add_technical_info": {
            "type": "boolean",
            "description": "Import plugin output strings",
            "example": false,
            "default": true
          },
          "only_import_network": {
            "type": "boolean",
            "description": "Only import hosts/hostnames/ports",
            "example": true,
            "default": false
          },
          "hosts_description": {
            "type": "string",
            "description": "New host description",
            "example": "New Nessus scan",
            "default": "Added from Nessus scan"
          },
          "ports_description": {
            "type": "string",
            "description": "New port description",
            "example": "New Nessus scan",
            "default": "Added from Nessus scan"
          },
          "hostnames_description": {
            "type": "string",
            "description": "New hostname description",
            "example": "New Nessus scan",
            "default": "Added from Nessus scan"
          }
        }
      },
      "tool_metasploit_body": {
        "required": [
          "access_token",
          "xml_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "xml_files": {
            "type": "string",
            "description": "One(!) report .xml file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "add_nmap_scripts": {
            "type": "boolean",
            "description": "Add nmap scripts output to hosts/services info (!a lot of output!)",
            "example": true,
            "default": false
          },
          "only_nmap": {
            "type": "boolean",
            "description": "Import only nmap result",
            "example": false,
            "default": true
          },
          "hostnames_description": {
            "type": "string",
            "description": "New hostname description",
            "example": "New Metasploit scan",
            "default": "Added from Metasploit scan"
          }
        }
      },
      "tool_maxpatrol_body": {
        "required": [
          "access_token",
          "xml_files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "xml_files": {
            "type": "string",
            "description": "One(!) report .xml file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "hosts_description": {
            "type": "string",
            "description": "New host description",
            "example": "New MaxPatrol scan",
            "default": "Added from MaxPatrol scan"
          },
          "ports_description": {
            "type": "string",
            "description": "New port description",
            "example": "New MaxPatrol scan",
            "default": "Added from MaxPatrol scan"
          }
        }
      },
      "tool_acunetix_body": {
        "required": [
          "access_token",
          "files"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "files": {
            "type": "string",
            "description": "One(!) report .xml file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "host": {
            "type": "string",
            "description": "Host IP",
            "example": "8.8.8.8",
            "default": ""
          },
          "auto_resolve": {
            "type": "boolean",
            "description": "or automatic resolve ip from PCF server",
            "example": true,
            "default": false
          }
        }
      },
      "tool_dnsrecon_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "xml_files": {
            "type": "string",
            "description": "One(!) report .xml file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "csv_files": {
            "type": "string",
            "description": "One(!) report .csv file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "json_files": {
            "type": "string",
            "description": "One(!) report .json file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "hosts_description": {
            "type": "string",
            "description": "Hosts description",
            "example": "New DNSrecon result",
            "default": "Added from DNSrecon scan"
          },
          "ports_description": {
            "type": "string",
            "description": "Ports description",
            "example": "New DNSrecon result",
            "default": "Added from DNSrecon scan"
          },
          "ignore_ipv6": {
            "type": "boolean",
            "description": "Ignore IPv6 addresses",
            "example": true,
            "default": false
          }
        }
      },
      "tool_aiodnsbrute_body": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "csv_files": {
            "type": "string",
            "description": "One(!) report .csv file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "json_files": {
            "type": "string",
            "description": "One(!) report .json file, encoded to base64",
            "example": "PD4=",
            "default": ""
          },
          "hosts_description": {
            "type": "string",
            "description": "Hosts description",
            "example": "New aiodnsbrute result",
            "default": "Added from aiodnsbrute scan"
          },
          "hostnames_description": {
            "type": "string",
            "description": "Hostnames description",
            "example": "New aiodnsbrute result",
            "default": "Added from aiodnsbrute scan"
          },
          "ignore_ipv6": {
            "type": "boolean",
            "description": "Ignore IPv6 addresses",
            "example": true,
            "default": false
          }
        }
      },
      "inline_response_200_3_teams": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Team id",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Team name",
            "example": "Redteam"
          },
          "description": {
            "type": "string",
            "description": "Team description",
            "example": "Internal redteam of company"
          },
          "is_admin": {
            "type": "boolean",
            "description": "If current user is admin in this team",
            "example": false
          }
        }
      },
      "inline_response_200_7_users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "fname": {
            "type": "string",
            "description": "User first name",
            "example": "Ilya"
          },
          "lname": {
            "type": "string",
            "description": "User last name",
            "example": "Shaposhnikov"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "iljashaposhnikov@gmail.com"
          },
          "company": {
            "type": "string",
            "description": "Company name",
            "example": "Google inc."
          },
          "is_admin": {
            "type": "boolean",
            "description": "If current user is admin in team",
            "example": false
          }
        },
        "description": "User object"
      },
      "inline_response_200_9_projects": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Log UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "description": {
            "type": "string",
            "description": "Log description",
            "example": "Updated port 8.8.8.8:53(udp) info"
          },
          "project": {
            "type": "string",
            "description": "Project UUID",
            "example": "74ebd1a1-c10d-428d-8180-8c1d77272d1a"
          },
          "user_id": {
            "type": "string",
            "description": "User UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "date": {
            "type": "integer",
            "description": "Event Unix time",
            "example": 1602968583
          }
        },
        "description": "log object"
      },
      "inline_response_200_14_testers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "iljashaposhnikov@gmail.com"
          },
          "fname": {
            "type": "string",
            "description": "User first name",
            "example": "Ivan"
          },
          "lname": {
            "type": "string",
            "description": "User last name",
            "example": "Ivanov"
          },
          "company": {
            "type": "string",
            "description": "User company",
            "example": "Google inc."
          },
          "is_admin": {
            "type": "boolean",
            "description": "Is user admin of project",
            "example": true
          }
        },
        "description": "User object"
      },
      "inline_response_200_14_teams": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Team UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Team name",
            "example": "redteam"
          },
          "description": {
            "type": "string",
            "description": "Team description",
            "example": "Redteam of company"
          },
          "admin_email": {
            "type": "string",
            "description": "Team admin email",
            "example": "iljashaposhnikov@gmail.com"
          },
          "admin_id": {
            "type": "string",
            "description": "Team admin user UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          }
        },
        "description": "Team object"
      },
      "inline_response_200_14_projects": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Project UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Project name",
            "example": "pentest of ..."
          },
          "description": {
            "type": "string",
            "description": "Project description",
            "example": "Long description about project"
          },
          "type": {
            "type": "string",
            "description": "Project type (pentest)",
            "example": "pentest"
          },
          "scope": {
            "type": "string",
            "description": "Project scope information",
            "example": "All of *.site.org"
          },
          "start_date": {
            "type": "integer",
            "description": "Event Unix time start date",
            "example": 1602968583
          },
          "end_date": {
            "type": "integer",
            "description": "Event Unix time end date",
            "example": 1602968584
          },
          "status": {
            "type": "string",
            "description": "Status of project (active/archived)",
            "example": "active"
          },
          "admin_id": {
            "type": "string",
            "description": "Admin user UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "testers": {
            "type": "array",
            "description": "Array of project testers",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_14_testers"
            }
          },
          "teams": {
            "type": "array",
            "description": "Array of project teams",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_14_teams"
            }
          }
        },
        "description": "Project object"
      },
      "inline_response_200_17_hostnames": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Hostname UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "hostname": {
            "type": "string",
            "description": "Hostname value",
            "example": "www.google.com"
          },
          "description": {
            "type": "string",
            "description": "Hostname description",
            "example": "Main company hostname"
          }
        },
        "description": "Hostname object"
      },
      "inline_response_200_17_hosts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Host UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "ip": {
            "type": "string",
            "description": "Host IPv4 or IPv6",
            "example": "127.0.0.1"
          },
          "description": {
            "type": "string",
            "description": "Host description",
            "example": "Main site of company"
          },
          "os": {
            "type": "string",
            "description": "Host operation system",
            "example": "Windows 7"
          },
          "hostnames": {
            "type": "array",
            "description": "Array of hostnames",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_17_hostnames"
            }
          },
          "issues": {
            "type": "array",
            "description": "Array of project teams",
            "items": {
              "type": "string",
              "description": "Issue UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        },
        "description": "Projects host object"
      },
      "inline_response_200_18_ports": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Port UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "port": {
            "type": "integer",
            "description": "Port number",
            "example": 8080
          },
          "is_tcp": {
            "type": "boolean",
            "description": "If port type tcp",
            "example": true
          },
          "service": {
            "type": "string",
            "description": "Port service",
            "example": "http"
          },
          "description": {
            "type": "string",
            "description": "Port description",
            "example": "Website port"
          }
        },
        "description": "Port object"
      },
      "inline_response_200_24_networks": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Network UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "description": {
            "type": "string",
            "description": "Network description",
            "example": "Internal company network"
          },
          "name": {
            "type": "string",
            "description": "Network name",
            "example": "Office"
          },
          "ip": {
            "type": "string",
            "description": "Network IP",
            "example": "192.168.0.0"
          },
          "is_ipv6": {
            "type": "string",
            "description": "If network is IPv6",
            "example": "false"
          },
          "mask": {
            "type": "integer",
            "description": "Network mask",
            "example": 24
          },
          "asn": {
            "type": "integer",
            "description": "Network ASN number",
            "example": 1337
          },
          "internal_ip": {
            "type": "string",
            "description": "Tester internal IP",
            "example": "192.168.0.100"
          },
          "access_from": {
            "$ref": "#/components/schemas/projectproject_idnetworknetwork_idedit_access_from"
          },
          "cmd": {
            "type": "string",
            "description": "Connection command",
            "example": "ssh -D 8888 root@192.168.0.1"
          },
          "hosts": {
            "type": "array",
            "description": "Network hosts array",
            "items": {
              "type": "string",
              "description": "Host UUID",
              "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
            }
          }
        },
        "description": "Network object"
      },
      "inline_response_200_27_fields_nessus_id": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of field",
            "example": "number",
            "enum": [
              "text",
              "float",
              "number",
              "boolean",
              "file"
            ]
          },
          "val": {
            "description": "Field value (or file UUID)",
            "example": 1337,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              }
            ]
          }
        },
        "description": "Example field - nessus_id"
      },
      "inline_response_200_27_fields": {
        "type": "object",
        "properties": {
          "nessus_id": {
            "$ref": "#/components/schemas/inline_response_200_27_fields_nessus_id"
          }
        },
        "description": "Additional issue fields"
      },
      "inline_response_200_27_issues": {
        "type": "object",
        "properties": {
          "cve": {
            "type": "string",
            "description": "Issue CVE",
            "example": "CVE-2020-1234",
            "default": ""
          },
          "cvss": {
            "type": "number",
            "description": "Issue CVSS",
            "example": 10,
            "default": 0
          },
          "cwe": {
            "type": "integer",
            "description": "Issue CWE",
            "example": 123,
            "default": 0
          },
          "description": {
            "type": "string",
            "description": "Issue description",
            "example": "SQL injection at...",
            "default": ""
          },
          "fix": {
            "type": "string",
            "description": "Fix of vulnerability",
            "example": "To fix this vulnerability you just need...",
            "default": ""
          },
          "issue_id": {
            "type": "string",
            "description": "UUID of issue",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Name of issue",
            "example": "SSRF"
          },
          "param": {
            "type": "string",
            "description": "Vulnerable params",
            "example": "GET id=1",
            "default": ""
          },
          "status": {
            "type": "string",
            "description": "Status of issue",
            "example": "Comfirmed",
            "default": "need to recheck"
          },
          "type": {
            "type": "string",
            "description": "Type of issue",
            "example": "Web",
            "default": "custom"
          },
          "url_path": {
            "type": "string",
            "description": "URL of issue",
            "example": "/admin/",
            "default": ""
          },
          "technical": {
            "type": "string",
            "description": "Issue technical information",
            "example": "You can use exploit...",
            "default": ""
          },
          "risks": {
            "type": "string",
            "description": "Issue exploitation risks",
            "example": "Some risks during exploitation",
            "default": ""
          },
          "references": {
            "type": "string",
            "description": "Links with issue information",
            "example": "http://test.org/",
            "default": ""
          },
          "intruder": {
            "type": "string",
            "description": "Type of intruder",
            "example": "Internal",
            "default": ""
          },
          "services": {
            "$ref": "#/components/schemas/projectproject_idissuescreate_services"
          },
          "fields": {
            "$ref": "#/components/schemas/inline_response_200_27_fields"
          }
        },
        "description": "Issue object"
      },
      "inline_response_200_28_pocs_ad236cdbf645456c918cdd8d8085ae95": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "object",
            "description": "PoC priotiry value 0/1",
            "example": 1
          }
        },
        "description": "PoC priority"
      },
      "inline_response_200_28_pocs": {
        "type": "object",
        "properties": {
          "ad236cdb-f645-456c-918c-dd8d8085ae95": {
            "$ref": "#/components/schemas/inline_response_200_28_pocs_ad236cdbf645456c918cdd8d8085ae95"
          }
        },
        "description": "List of PoCs UUID"
      },
      "inline_response_200_32_host": {
        "type": "object",
        "properties": {
          "os": {
            "type": "string",
            "description": "Host operation system",
            "example": "Windows 7"
          },
          "id": {
            "type": "string",
            "description": "Host UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "ip": {
            "type": "string",
            "description": "Host IPv4 or IPv6",
            "example": "8.8.8.8"
          },
          "description": {
            "type": "string",
            "description": "Host description",
            "example": "Gateway of network"
          }
        },
        "description": "Host object"
      },
      "inline_response_200_32_hostnames": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Hostname UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "hostname": {
            "type": "string",
            "description": "Hostname value",
            "example": "www.google.com"
          },
          "description": {
            "type": "string",
            "description": "Hostname description",
            "example": "Main site of company"
          },
          "host": {
            "$ref": "#/components/schemas/inline_response_200_32_host"
          }
        },
        "description": "Projects hostname object"
      },
      "inline_response_200_36_users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "fname": {
            "type": "string",
            "description": "User first name",
            "example": "Ilya"
          },
          "lname": {
            "type": "string",
            "description": "User last name",
            "example": "Shaposhnikov"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "iljashaposhnikov@gmail.com"
          },
          "company": {
            "type": "string",
            "description": "Company name",
            "example": "Google inc."
          }
        },
        "description": "User object"
      },
      "inline_response_200_36_teams": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Team UUID",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Team name",
            "example": "RedTeam"
          }
        },
        "description": "Team object"
      },
      "inline_response_200_36_tasks": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Check XSS at...",
            "default": ""
          },
          "task_id": {
            "type": "string",
            "description": "UUID of task",
            "example": "ad236cdb-f645-456c-918c-dd8d8085ae95"
          },
          "name": {
            "type": "string",
            "description": "Name of task",
            "example": "NMAP Scan"
          },
          "status": {
            "type": "string",
            "description": "Status of task",
            "example": "done",
            "default": "todo",
            "enum": [
              "todo",
              "progress",
              "review",
              "done"
            ]
          },
          "criticality": {
            "type": "string",
            "description": "Criticality of task",
            "example": "medium",
            "default": "info",
            "enum": [
              "critical",
              "high",
              "medium",
              "low",
              "info"
            ]
          },
          "start_date": {
            "type": "number",
            "description": "Task start date (unix-time)",
            "example": 1664625623,
            "default": 0
          },
          "finish_date": {
            "type": "number",
            "description": "Task finish date (unix-time)",
            "example": 1664625623,
            "default": 0
          },
          "users": {
            "type": "array",
            "description": "Array of user objects",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_36_users"
            }
          },
          "teams": {
            "type": "array",
            "description": "Array of team objects",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_36_teams"
            }
          },
          "services": {
            "$ref": "#/components/schemas/projectproject_idtasktask_idedit_services"
          }
        },
        "description": "Task object"
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}